
// string input = @"LURLLLLLDUULRDDDRLRDDDUDDUULLRLULRURLRRDULUUURDUURLRDRRURUURUDDRDLRRLDDDDLLDURLDUUUDRDDDLULLDDLRLRRRLDLDDDDDLUUUDLUULRDUDLDRRRUDUDDRULURULDRUDLDUUUDLUDURUURRUUDRLDURRULURRURUUDDLRLDDDDRDRLDDLURLRDDLUDRLLRURRURRRURURRLLRLDRDLULLUDLUDRURDLRDUUDDUUDRLUDDLRLUDLLURDRUDDLRURDULLLUDDURULDRLUDLUDLULRRUUDDLDRLLUULDDURLURRRRUUDRUDLLDRUDLRRDUDUUURRULLDLDDRLUURLDUDDRLDRLDULDDURDLUUDRRLDRLLLRRRDLLLLURDLLLUDRUULUULLRLRDLULRLURLURRRDRLLDLDRLLRLULRDDDLUDDLLLRRLLLUURLDRULLDURDLULUDLRLDLUDURLLLURUUUDRRRULRDURLLURRLDLRLDLDRRUUDRDDDDDRDUUDULUL
// RRURLURRULLUDUULUUURURULLDLRLRRULRUDUDDLLLRRRRLRUDUUUUDULUDRULDDUDLURLRRLLDLURLRDLDUULRDLLLDLLULLURLLURURULUDLDUDLUULDDLDRLRRUURRRLLRRLRULRRLDLDLRDULDLLDRRULRDRDUDUUUDUUDDRUUUDDLRDULLULDULUUUDDUULRLDLRLUUUUURDLULDLUUUULLLLRRRLDLLDLUDDULRULLRDURDRDRRRDDDLRDDULDLURLDLUDRRLDDDLULLRULDRULRURDURRUDUUULDRLRRUDDLULDLUULULRDRDULLLDULULDUDLDRLLLRLRURUDLUDDDURDUDDDULDRLUDRDRDRLRDDDDRLDRULLURUDRLLUDRLDDDLRLRDLDDUULRUDRLUULRULRLDLRLLULLUDULRLDRURDD
// UUUUUURRDLLRUDUDURLRDDDURRRRULRLRUURLLLUULRUDLLRUUDURURUDRDLDLDRDUDUDRLUUDUUUDDURRRDRUDDUURDLRDRLDRRULULLLUDRDLLUULURULRULDRDRRLURULLDURUURDDRDLLDDDDULDULUULLRULRLDURLDDLULRLRRRLLURRLDLLULLDULRULLDLRULDDLUDDDLDDURUUUURDLLRURDURDUUDRULDUULLUUULLULLURLRDRLLRULLLLRRRRULDRULLUURLDRLRRDLDDRLRDURDRRDDDRRUDRLUULLLULRDDLDRRLRUDLRRLDULULRRDDURULLRULDUDRLRUUUULURLRLRDDDUUDDULLULLDDUDRLRDDRDRLDUURLRUULUULDUDDURDDLLLURUULLRDLRRDRDDDUDDRDLRRDDUURDUULUDDDDUUDDLULLDRDDLULLUDLDDURRULDUDRRUURRDLRLLDDRRLUUUDDUUDUDDDDDDDLULURRUULURLLUURUDUDDULURDDLRDDRRULLLDRRDLURURLRRRDDLDUUDR
// URLLRULULULULDUULDLLRDUDDRRLRLLLULUDDUDLLLRURLLLLURRLRRDLULRUDDRLRRLLRDLRRULDLULRRRRUUDDRURLRUUDLRRULDDDLRULDURLDURLRLDDULURDDDDULDRLLUDRULRDDLUUUDUDUDDRRUDUURUURLUUULRLULUURURRLRUUULDDLURULRRRRDULUDLDRLLUURRRLLURDLDLLDUDRDRLLUDLDDLRLDLRUDUULDRRLLULDRRULLULURRLDLUUDLUDDRLURDDUDRDUDDDULLDRUDLRDLRDURUULRRDRUUULRUURDURLDUDRDLLRUULUULRDDUDLRDUUUUULDDDDDRRULRURLLRLLUUDLUDDUULDRULDLDUURUDUDLRULULUULLLLRLULUDDDRRLLDRUUDRLDDDRDDURRDDDULURDLDLUDDUULUUURDULDLLULRRUURDDUDRUULDLRLURUDLRDLLLDRLDUURUDUDRLLLDDDULLUDUUULLUUUDLRRRURRRRRDUULLUURRDUU
// UDULUUDLDURRUDDUDRDDRRUULRRULULURRDDRUULDRLDUDDRRRRDLRURLLLRLRRLLLULDURRDLLDUDDULDLURLURUURLLLDUURRUUDLLLUDRUDLDDRLRRDLRLDDDULLRUURUUUDRRDLLLRRULDRURLRDLLUDRLLULRDLDDLLRRUDURULRLRLDRUDDLUUDRLDDRUDULLLURLRDLRUUDRRUUDUDRDDRDRDDLRULULURLRULDRURLURLRDRDUUDUDUULDDRLUUURULRDUDRUDRULUDDULLRDDRRUULRLDDLUUUUDUDLLLDULRRLRDDDLULRDUDRLDLURRUUDULUDRURUDDLUUUDDRLRLRLURDLDDRLRURRLLLRDRLRUUDRRRLUDLDLDDDLDULDRLURDURULURUDDDUDUULRLLDRLDDDDRULRDRLUUURD";
// // input = @"ULL
// // RRDDD
// // LURDL
// // UUUUD";
// Vector2 pos = new(-2,0);
// string code ="";
// Dictionary<char, Vector2>dirs = new()
// {
//     {'U', new Vector2(0, 1)},
//     {'D', new Vector2(0, -1)},
//     {'L', new Vector2(-1, 0)},
//     {'R', new Vector2(1, 0)}
// };
// Keypad keypad = new();
// foreach(string line in input.Split('\n'))
// {
//     foreach(char dir in line)
//     {
//         if(!keypad.keys.Any(key => key.pos == pos + dirs[dir])) continue;
//         pos += dirs[dir];
//     }
//     keypad.keys.Select(key => key.pos == pos);
//     Console.WriteLine(pos);
//     Console.WriteLine(keypad.keys.First(key => key.pos == pos).name); 
// }

// // \.=. o/ o7 \o o\ /
// //  _
// // / \
// //  |
// // \.=.
// class Keypad
// {
//     public Key[] keys = new Key[13];
//     public Keypad()
//     {
//         keys[0] = new Key('1', new Vector2(0, 2));
//         keys[1] = new Key('2', new Vector2(-1, 1));
//         keys[2] = new Key('3', new Vector2(0, 1));
//         keys[3] = new Key('4', new Vector2(1, 1));
//         keys[4] = new Key('5', new Vector2(-2, 0));
//         keys[5] = new Key('6', new Vector2(-1, 0));
//         keys[6] = new Key('7', new Vector2(0, 0));
//         keys[7] = new Key('8', new Vector2(1, 0));
//         keys[8] = new Key('9', new Vector2(2, 0));
//         keys[9] = new Key('A', new Vector2(-1, -1));
//         keys[10] = new Key('B', new Vector2(0, -1));
//         keys[11] = new Key('C', new Vector2(1, -1));
//         keys[12] = new Key('D', new Vector2(0, -2));
        
        
        
//     }
// }
// class Key
// {
//     public char name;
//     public Vector2 pos;
//     public Key(char name, Vector2 pos)
//     {
//         this.name = name;
//         this.pos = pos;
//     }
// }
// struct Vector2
// {
//     public int x;
//     public int y;
//     public Vector2(int x = 0, int y = 0) 
//     {
//         this.x = x;
//         this.y = y;
//     }
//     public static Vector2 operator +(Vector2 a, Vector2 b) {
//         a.x += b.x;
//         a.y += b.y;
//         return a;
//     }
//     public static bool operator ==(Vector2 a, Vector2 b)
//     {
//         return a.x == b.x && a.y == b.y;
//     }
//     public static bool operator !=(Vector2 a, Vector2 b)
//     {
//         return a.x != b.x && a.y != b.y;
//     }
//     public override string ToString(){return $"({x},{y})";}
// }
